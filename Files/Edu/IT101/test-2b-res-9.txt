Батраков 4
4: сильно неправильно. 1) Нужно было формировать новый список (вызывать конструкторы элементов), а не курочить старый. 2) У вас k-ый элемент равен произведению от первого до k-ого, а в задании просили от k-го до последнего.

Зуев 2
2: это должна была быть одна процедура, а не две функции. У нас так всегда: одно задание = одна подпрограмма. Плюс вспомогательные, если нужно, но интерфейсная — одна. Кроме того, у вас 4-значные числа считаются 3-значными.

3: вставка неправильная.

Буцев 4
Task это плохое имя для подпрограмм с решениями. Пожалуйста, не используйте его больше, иначе я не буду зачитывать контрольные.

1: а почему нельзя создать список из одного первого числа Фибоначчи?

4: Во-первых, плохой алгоритм: n^2, а можно за n. Во-вторых, в начале получаются два одинаковых элемента, то есть один лишний. Разберитесь, почему.

Гаджиев 4
Обилие циклов repeat-until приводят меня в глубокое уныние…
2: длинный заголовок процедуры надо было перенести на новую строку.

3: иногда вылетает с ошибкой: не задана ссылка на объект.

Гончарова 3
Копировать определения Node из файла в файл это просто ужасно, ничего нет хуже этого. В следующий раз моё сердце не выдержит этого печального зрелища и я не стану проверять.

1: При печати в обратном порядке последний элемент списка не печатается. Поскольку процедура печати простая и вроде правильная, проблема с инициализацией ссылок при создании списка.

2: просили список вещественных, а у вас целые.

3: процедура Delet (кстати, в имени содержится грамматическая ошибка) время от времени вылетает с ошибкой: в экземпляре не задана ссылка на объект. Когда вы используете конструкции типа p.prev.next или p.next.prev, нудно быть уверенным, что p.prev или p.next, соответственно, не равны nil.

4: алгоритм, конечно, очень плохой, сложность n^2, а можно за один проход по списку всё сделать (идти надо с конца), сложность будет n.

Двораковская 2
CreateList: random(9) — писать девятку посреди кода это очень плохо.
2: это должна была быть одна процедура, а не две функции. У нас так всегда: одно задание = одна подпрограмма. Плюс вспомогательные, если нужно, но интерфейсная — одна. 'Арифметическая сумма = ' это странное сообщение: математике неизвестно понятие арифметической суммы. 

3: вылетает. Если пишите
first:=first.next;
first.prev:=nil;
то нужно быть уверенным, что изначальный узел first.next существовал (не был равен nil).

4: в задании просили произведение от k-го до последнего, а у вас от первого до k-го.

Кошелев 2
Копировать определения Node из файла в файл это просто ужасно, ничего нет хуже этого. В следующий раз моё сердце не выдержит этого печального зрелища и я не стану проверять.

2: это должна была быть одна процедура, а не две функции. У нас так всегда: одно задание = одна подпрограмма.

Две программы из четырёх не компилируются — я не проверяю некомпилируемые решения! Кроме того, основная программа пуста, а в первом семестре я говорил, что в основной программе должна демонстрироваться корректная работа созданных подпрограмм.

Линецкий 2
2: это должна была быть одна процедура, а не две функции. У нас так всегда: одно задание = одна подпрограмма. Плюс вспомогательные, если нужно, но интерфейсная — одна. ThreeFigures неправильная: 4-значные числа пропускает. 

3: не компилируется. 

4: вы передаёте количество элементов в NewNode — это принципиально неправильно, так со списками не работают. Списки обрабатываются циклами с условием «пока есть следующий». Так что не могу зачесть это. Ещё алгоритм плохой: можно посчитать за один проход по исходному списку (накапливая сумму и количество).

Письменский 3

2: это должна была быть одна процедура, а не две функции. У нас так всегда: одно задание = одна подпрограмма. Плюс вспомогательные, если нужно, но интерфейсная — одна.
case n.data of
      100..999
это оригинально: может быть всё-таки if'ом можно было обойтись?
В CountOfNotOddElements зачем последний элемент считается отдельно? Это недостаток алгоритма.

3: n должно передаваться по ссылке.

Изварин 2
Хотелось бы в тексте файлов с программами также иметь комментарии о том, что они делают.

1: -, 2: 0.5. 3: +.
